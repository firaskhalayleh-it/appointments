name: iOS-ipa-build
on:
  workflow_dispatch:

jobs:
  test-and-check:
    name: âœ… Test and iOS Version Check
    runs-on: macos-latest
    outputs:
      tests_passed: ${{ steps.test_status.outputs.passed }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Check Test Cache
        id: test_cache
        uses: actions/cache@v3
        with:
          path: |
            .test_status
          key: test-status-${{ github.sha }}
          
      - name: Check Cached Test Status
        id: test_status
        if: steps.test_cache.outputs.cache-hit == 'true'
        run: |
          if [ -f .test_status ] && [ "$(cat .test_status)" == "passed" ]; then
            echo "Tests previously passed, skipping..."
            echo "passed=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "passed=false" >> $GITHUB_OUTPUT

      - name: Setup Flutter
        if: steps.test_status.outputs.passed != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          
      - name: Verify Flutter Installation
        if: steps.test_status.outputs.passed != 'true'
        run: |
          flutter doctor -v
          
      - name: Cache pub dependencies
        if: steps.test_status.outputs.passed != 'true'
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            **/.dart_tool
            **/.flutter-plugins
            **/.flutter-plugins-dependencies
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-
            
      - name: Flutter Pub Get
        if: steps.test_status.outputs.passed != 'true'
        run: |
          flutter clean
          flutter pub get
          
      - name: Run Flutter Tests
        if: steps.test_status.outputs.passed != 'true'
        run: |
          flutter test || echo "No tests found"
          echo "passed" > .test_status

  build-ios:
    runs-on: macos-latest
    needs: test-and-check
    if: always()
    steps:
      - uses: actions/checkout@v3
      
      - name: Check Build Cache
        id: build_cache
        uses: actions/cache@v3
        with:
          path: |
            build/ios/iphoneos/FlutterIpaExport.ipa
          key: ios-build-${{ github.sha }}
          
      - name: Setup Flutter
        if: steps.build_cache.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          
      - name: Setup Ruby and CocoaPods
        if: steps.build_cache.outputs.cache-hit != 'true'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          
      - name: Cache CocoaPods
        if: steps.build_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
            
      - name: Flutter Setup
        if: steps.build_cache.outputs.cache-hit != 'true'
        run: |
          flutter clean
          flutter pub get
          
      - name: Debug Flutter Environment
        if: steps.build_cache.outputs.cache-hit != 'true'
        run: |
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "PWD: $(pwd)"
          flutter doctor -v
          echo "Looking for podhelper.rb:"
          find $FLUTTER_ROOT -name "podhelper.rb" 2>/dev/null || true
          find . -name "podhelper.rb" 2>/dev/null || true
          
      - name: Pod Install
        if: steps.build_cache.outputs.cache-hit != 'true'
        run: |
          cd ios
          rm -rf Pods Podfile.lock
          pod repo update
          pod install --repo-update
        env:
          LANG: en_US.UTF-8
          FLUTTER_ROOT: ${{ env.FLUTTER_ROOT }}
          
      - name: Build iOS Release
        if: steps.build_cache.outputs.cache-hit != 'true'
        run: |
          flutter build ios --release --no-codesign
          
          cd build/ios/iphoneos
          mkdir -p Payload
          mv Runner.app Payload/
          zip -r FlutterIpaExport.ipa Payload
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
          FLUTTER_ROOT: ${{ env.FLUTTER_ROOT }}

      - name: Upload IPA as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-app
          path: build/ios/iphoneos/FlutterIpaExport.ipa
          
      - name: Create Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.5.${{ github.run_number }}.${{ github.run_attempt }}
          overwrite: true
          body: "Release v1.5.${{ github.run_number }}.${{ github.run_attempt }}"
