name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  # --- Job 1: Detect iOS SDK, run tests, etc. ---
  test-and-check:
    name: âœ… Test and iOS Version Check
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: flutter/setup-flutter@v2
        with:
          channel: stable

      # STEP 1: Detect iOS SDK version
      - name: Find iOS SDK version
        id: find-ios-sdk
        run: |
          ios_sdk=$(xcodebuild -showsdks | grep -E "iOS [0-9\.]+" | head -1 | sed -E "s/.*iOS ([0-9\.]+).*/\1/")
          echo "Found iOS SDK version: $ios_sdk"
          echo "sdk_version=$ios_sdk" >> $GITHUB_OUTPUT

      # STEP 2: Update Podfile Platform
      - name: Update Podfile Platform
        run: |
          IOS_SDK_VERSION="${{ steps.find-ios-sdk.outputs.sdk_version }}"
          if [ -z "$IOS_SDK_VERSION" ]; then
            echo "No iOS SDK version found. Skipping Podfile update..."
          else
            sed -i.bak "s/^platform :ios, .*/platform :ios, '$IOS_SDK_VERSION'/" ios/Podfile || true
            cat ios/Podfile
          fi

      # CACHE STEP #1: Cache Flutter/Dart packages
      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pubcache-${{ hashFiles('pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pubcache-

      - name: Flutter Pub Get
        run: flutter pub get

      # Optional: Show iOS SDKs for debugging
      - name: Show iOS SDKs
        run: xcodebuild -showsdks

      # Use script to ensure test directory
      - name: Ensure test directory
        run: |
          chmod +x setup_tests.sh
          ./setup_tests.sh
        shell: bash

      # Run Flutter tests
      - name: Run Flutter Tests
        run: flutter test

  # --- Job 2: Build and export IPA ---
  build-ios:
    runs-on: macos-latest
    needs: test-and-check
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: flutter/setup-flutter@v2
        with:
          channel: stable

      - name: Set Flutter Root
        run: echo "export FLUTTER_ROOT=$(dirname $(dirname $(which flutter)))" >> $GITHUB_ENV

      - name: Print Flutter Root
        run: echo "Flutter root is set to $FLUTTER_ROOT"

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Clean Flutter Build
        run: flutter clean

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Pod Install
        run: pod install
        working-directory: ios

      - name: Build iOS Release
        run: flutter build ios --release --no-codesign

      - name: Create Payload Directory
        run: mkdir Payload
        working-directory: build/ios/iphoneos

      - name: Move App into Payload
        run: mv Runner.app Payload
        working-directory: build/ios/iphoneos

      - name: Zip IPA
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.4
          overwrite: true
          body: "Built with auto-detected iOS SDK version"
